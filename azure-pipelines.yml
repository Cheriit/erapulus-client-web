trigger:
  - master
pr:
  - master

variables:
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    NX_BRANCH: 'master'
  ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
    NX_BRANCH: $(System.PullRequest.PullRequestNumber)

jobs:
  - job: initial_setup
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: npm i

  - job: lint
    dependsOn: initial_setup
    condition: |
      and(
        succeeded(),
        not(contains(
          dependencies.initial_setup.outputs['setCommands.COMMANDS'],
          '"lint":[]'
        ))
      )
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      COMMANDS: $[ dependencies.initial_setup.outputs['setCommands.COMMANDS'] ]
    steps:
      - script: npm lint


  - job: test
    dependsOn: initial_setup
    condition: |
      and(
        succeeded(),
        not(contains(
          dependencies.initial_setup.outputs['setCommands.COMMANDS'],
          '"test":[]'
        ))
      )
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      COMMANDS: $[ dependencies.initial_setup.outputs['setCommands.COMMANDS'] ]
    steps:
      - script: npm test
        -
  - job: e2e
    dependsOn: initial_setup
    condition: |
      and(
        succeeded(),
        not(contains(
          dependencies.initial_setup.outputs['setCommands.COMMANDS'],
          '"e2e":[]'
        ))
      )
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      COMMANDS: $[ dependencies.initial_setup.outputs['setCommands.COMMANDS'] ]
    steps:
      - script: npm e2e

  - job: build
    dependsOn: initial_setup
    condition: |
      and(
        succeeded(),
        not(contains(
          dependencies.initial_setup.outputs['setCommands.COMMANDS'],
          '"build":[]'
        ))
      )
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      COMMANDS: $[ dependencies.initial_setup.outputs['setCommands.COMMANDS'] ]
    steps:
      - script: npm build`

  - job: main
      dependsOn: [ lint, build ]

  - job: pr
    condition: eq(variables['Build.Reason'], 'PullRequest')
    dependsOn: [ main, test, e2e ]
